using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO.Ports;

namespace THF
{
    public partial class Form1 : Form
    {
        private SerialPort myport;
        private DateTime datetime;
        private string in_data;
        private string in_pir;
        public Form1()
        {
            InitializeComponent();
            init();
        }

        private void init()
        {
            //
            button1.Enabled = true;
            Connect.Enabled = true;
            left.Enabled = true;
            right.Enabled = true;
            back.Enabled = true;
            brake.Enabled = true;
            thermal.Enabled = true;
            lights.Enabled = true;
        }

	        private void Connect_Click(object sender, EventArgs e)
        {
            try
            {
                myport = new SerialPort();
                myport.BaudRate = 9600;
                myport.PortName = portname.Text;
                myport.Open();
                myport.DataReceived += Myport_DataReceived;
                myport.DataReceived += Myport_DataReceived1;
                MessageBox.Show("Rover Connected!!");
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void Myport_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {

            in_data = myport.ReadLine();
            this.Invoke(new EventHandler(displaydata_event));
        }

        private void displaydata_event(object sender, EventArgs e)
        {
            datetime = DateTime.Now;

            string time = datetime.Hour + ":" + datetime.Minute + ":" + datetime.Second;
            textBox1.Text = time + "\t\t" + in_data;
        }

        

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("w");

                button1.Enabled = false;
                left.Enabled = true;
                right.Enabled = true;
                back.Enabled = true;
                brake.Enabled = true;
                thermal.Enabled = true;
                lights.Enabled = true;
                check.Enabled = true;
            }
            catch(Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void left_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("a");

                button1.Enabled = true;
                left.Enabled = false;
                right.Enabled = true;
                back.Enabled = true;
                brake.Enabled = true;
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void back_Click(object sender, EventArgs e)
        {
            try {
                myport.Write("s");

                button1.Enabled = true;
                left.Enabled = true;
                right.Enabled = true;
                back.Enabled = false;
                brake.Enabled = true;
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void right_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("d");

                button1.Enabled = true;
                left.Enabled = true;
                right.Enabled = false;
                back.Enabled = true;
                brake.Enabled = true;
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void brake_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("b");

                button1.Enabled = true;
                left.Enabled = true;
                right.Enabled = true;
                back.Enabled = true;
                brake.Enabled = false;
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void check_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("g");
                textBox1.Text = "";
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }

        }

        private void button1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.W)
            {
                button1.PerformClick();
            }
        }

        private void left_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.A)
            {
                left.PerformClick();
            }
        }

        private void back_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.S)
            {
                back.PerformClick();
            }
        }

        private void right_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.D)
            {
                right.PerformClick();
            }
        }

        private void brake_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.B)
            {
                brake.PerformClick();
            }
        }

        private void check_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.G)
            {
                check.PerformClick();
            }
        }

        private void Myport_DataReceived1(object sender, SerialDataReceivedEventArgs e)
        {
            in_pir = myport.ReadLine();
            this.Invoke(new EventHandler(displaypir_evnet));
        }

        private void displaypir_evnet(object sender, EventArgs e)
        {
            datetime = DateTime.Now;

            string time = datetime.Hour + ":" + datetime.Minute + ":" + datetime.Second;
            pir.Text = time + "\t\t" + in_pir;
        }

        private void lights_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("l");

                button1.Enabled = true;
                left.Enabled = true;
                right.Enabled = true;
                back.Enabled = true;
                brake.Enabled = true;
                thermal.Enabled = true;
                lights.Enabled = false;
                lightsoff.Enabled = true;
                check.Enabled = true;
            }
            catch(Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void lightsoff_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("n");

                button1.Enabled = true;
                left.Enabled = true;
                right.Enabled = true;
                back.Enabled = true;
                brake.Enabled = true;
                thermal.Enabled = true;
                lights.Enabled = true;
                lightsoff.Enabled = false;
                check.Enabled = true;
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }

        private void thermal_Click(object sender, EventArgs e)
        {
            try
            {
                myport.Write("p");
                pir.Text = "";
            }
            catch (Exception)
            {
                MessageBox.Show("Rover Not Connected!!");
            }
        }
    }
}
